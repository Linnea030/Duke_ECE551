Grading at 11/22/2022:18:46:42.555004
For commit ID 388d34a8eb10c347b64751305fe05fe6fab922fb
Grading at Tue Nov 22 01:46:38 PM EST 2022
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==894395== Memcheck, a memory error detector
==894395== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==894395== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==894395== Command: ./testFreq /etc/issue
==894395== Parent PID: 894394
==894395== 
==894395== Conditional jump or move depends on uninitialised value(s)
==894395==    at 0x10946B: main (testFreq.cpp:13)
==894395== 
==894395== Use of uninitialised value of size 8
==894395==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894395==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894395==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894395==    by 0x1094BC: main (testFreq.cpp:17)
==894395== 
==894395== Conditional jump or move depends on uninitialised value(s)
==894395==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894395==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894395==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894395==    by 0x1094BC: main (testFreq.cpp:17)
==894395== 
==894395== 
==894395== HEAP SUMMARY:
==894395==     in use at exit: 0 bytes in 0 blocks
==894395==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==894395== 
==894395== All heap blocks were freed -- no leaks are possible
==894395== 
==894395== Use --track-origins=yes to see where uninitialised values come from
==894395== For lists of detected and suppressed errors, rerun with: -s
==894395== ERROR SUMMARY: 293 errors from 3 contexts (suppressed: 0 from 0)
Testcase 2
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==894425== Memcheck, a memory error detector
==894425== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==894425== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==894425== Command: ./testFreq /etc/services
==894425== Parent PID: 894422
==894425== 
==894425== Conditional jump or move depends on uninitialised value(s)
==894425==    at 0x10946B: main (testFreq.cpp:13)
==894425== 
==894425== Use of uninitialised value of size 8
==894425==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894425==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894425==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894425==    by 0x1094BC: main (testFreq.cpp:17)
==894425== 
==894425== Conditional jump or move depends on uninitialised value(s)
==894425==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894425==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894425==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894425==    by 0x1094BC: main (testFreq.cpp:17)
==894425== 
==894425== 
==894425== HEAP SUMMARY:
==894425==     in use at exit: 0 bytes in 0 blocks
==894425==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==894425== 
==894425== All heap blocks were freed -- no leaks are possible
==894425== 
==894425== Use --track-origins=yes to see where uninitialised values come from
==894425== For lists of detected and suppressed errors, rerun with: -s
==894425== ERROR SUMMARY: 617 errors from 3 contexts (suppressed: 0 from 0)
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==894448== Memcheck, a memory error detector
==894448== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==894448== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==894448== Command: ./testFreq /usr/share/dict/words
==894448== Parent PID: 894447
==894448== 
==894448== Conditional jump or move depends on uninitialised value(s)
==894448==    at 0x10946B: main (testFreq.cpp:13)
==894448== 
==894448== Use of uninitialised value of size 8
==894448==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894448==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894448==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894448==    by 0x1094BC: main (testFreq.cpp:17)
==894448== 
==894448== Conditional jump or move depends on uninitialised value(s)
==894448==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894448==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894448==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894448==    by 0x1094BC: main (testFreq.cpp:17)
==894448== 
==894448== 
==894448== HEAP SUMMARY:
==894448==     in use at exit: 0 bytes in 0 blocks
==894448==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==894448== 
==894448== All heap blocks were freed -- no leaks are possible
==894448== 
==894448== Use --track-origins=yes to see where uninitialised values come from
==894448== For lists of detected and suppressed errors, rerun with: -s
==894448== ERROR SUMMARY: 753 errors from 3 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==894468== Memcheck, a memory error detector
==894468== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==894468== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==894468== Command: ./testFreq /etc/issue
==894468== Parent PID: 894467
==894468== 
==894468== Conditional jump or move depends on uninitialised value(s)
==894468==    at 0x10946B: main (testFreq.cpp:13)
==894468== 
==894468== Use of uninitialised value of size 8
==894468==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894468==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894468==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894468==    by 0x1094BC: main (testFreq.cpp:17)
==894468== 
==894468== Conditional jump or move depends on uninitialised value(s)
==894468==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894468==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894468==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==894468==    by 0x1094BC: main (testFreq.cpp:17)
==894468== 
==894468== 
==894468== HEAP SUMMARY:
==894468==     in use at exit: 0 bytes in 0 blocks
==894468==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==894468== 
==894468== All heap blocks were freed -- no leaks are possible
==894468== 
==894468== Use --track-origins=yes to see where uninitialised values come from
==894468== For lists of detected and suppressed errors, rerun with: -s
==894468== ERROR SUMMARY: 293 errors from 3 contexts (suppressed: 0 from 0)

Overall Grade: F
