Grading at 11/22/2022:18:41:43.611697
For commit ID 74672448a82ce19f2fa88b16c838148336597e33
Grading at Tue Nov 22 01:41:39 PM EST 2022
compiling
g++ -ggdb3 -Wall -Werror -pedantic -o testFreq testFreq.cpp readFreq.cpp
Make succeed, testFreq created
Testcase 1
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==891909== Memcheck, a memory error detector
==891909== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==891909== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==891909== Command: ./testFreq /etc/issue
==891909== Parent PID: 891908
==891909== 
==891909== Conditional jump or move depends on uninitialised value(s)
==891909==    at 0x10946B: main (testFreq.cpp:13)
==891909== 
==891909== Use of uninitialised value of size 8
==891909==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891909==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891909==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891909==    by 0x1094BC: main (testFreq.cpp:17)
==891909== 
==891909== Conditional jump or move depends on uninitialised value(s)
==891909==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891909==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891909==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891909==    by 0x1094BC: main (testFreq.cpp:17)
==891909== 
==891909== 
==891909== HEAP SUMMARY:
==891909==     in use at exit: 0 bytes in 0 blocks
==891909==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==891909== 
==891909== All heap blocks were freed -- no leaks are possible
==891909== 
==891909== Use --track-origins=yes to see where uninitialised values come from
==891909== For lists of detected and suppressed errors, rerun with: -s
==891909== ERROR SUMMARY: 293 errors from 3 contexts (suppressed: 0 from 0)
Testcase 2
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==891928== Memcheck, a memory error detector
==891928== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==891928== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==891928== Command: ./testFreq /etc/services
==891928== Parent PID: 891927
==891928== 
==891928== Conditional jump or move depends on uninitialised value(s)
==891928==    at 0x10946B: main (testFreq.cpp:13)
==891928== 
==891928== Use of uninitialised value of size 8
==891928==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891928==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891928==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891928==    by 0x1094BC: main (testFreq.cpp:17)
==891928== 
==891928== Conditional jump or move depends on uninitialised value(s)
==891928==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891928==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891928==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891928==    by 0x1094BC: main (testFreq.cpp:17)
==891928== 
==891928== 
==891928== HEAP SUMMARY:
==891928==     in use at exit: 0 bytes in 0 blocks
==891928==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==891928== 
==891928== All heap blocks were freed -- no leaks are possible
==891928== 
==891928== Use --track-origins=yes to see where uninitialised values come from
==891928== For lists of detected and suppressed errors, rerun with: -s
==891928== ERROR SUMMARY: 615 errors from 3 contexts (suppressed: 0 from 0)
Testcase 3
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==891938== Memcheck, a memory error detector
==891938== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==891938== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==891938== Command: ./testFreq /usr/share/dict/words
==891938== Parent PID: 891937
==891938== 
==891938== Conditional jump or move depends on uninitialised value(s)
==891938==    at 0x10946B: main (testFreq.cpp:13)
==891938== 
==891938== Use of uninitialised value of size 8
==891938==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891938==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891938==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891938==    by 0x1094BC: main (testFreq.cpp:17)
==891938== 
==891938== Conditional jump or move depends on uninitialised value(s)
==891938==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891938==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891938==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891938==    by 0x1094BC: main (testFreq.cpp:17)
==891938== 
==891938== 
==891938== HEAP SUMMARY:
==891938==     in use at exit: 0 bytes in 0 blocks
==891938==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==891938== 
==891938== All heap blocks were freed -- no leaks are possible
==891938== 
==891938== Use --track-origins=yes to see where uninitialised values come from
==891938== For lists of detected and suppressed errors, rerun with: -s
==891938== ERROR SUMMARY: 751 errors from 3 contexts (suppressed: 0 from 0)
Testcase 4
-----------------------
  - Valgrind reported errors
Valgrind reported errors (test failed).
==891977== Memcheck, a memory error detector
==891977== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==891977== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==891977== Command: ./testFreq /etc/issue
==891977== Parent PID: 891976
==891977== 
==891977== Conditional jump or move depends on uninitialised value(s)
==891977==    at 0x10946B: main (testFreq.cpp:13)
==891977== 
==891977== Use of uninitialised value of size 8
==891977==    at 0x499181B: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891977==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891977==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891977==    by 0x1094BC: main (testFreq.cpp:17)
==891977== 
==891977== Conditional jump or move depends on uninitialised value(s)
==891977==    at 0x499182D: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891977==    by 0x4991F99: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891977==    by 0x49A0399: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30)
==891977==    by 0x1094BC: main (testFreq.cpp:17)
==891977== 
==891977== 
==891977== HEAP SUMMARY:
==891977==     in use at exit: 0 bytes in 0 blocks
==891977==   total heap usage: 5 allocs, 5 frees, 87,520 bytes allocated
==891977== 
==891977== All heap blocks were freed -- no leaks are possible
==891977== 
==891977== Use --track-origins=yes to see where uninitialised values come from
==891977== For lists of detected and suppressed errors, rerun with: -s
==891977== ERROR SUMMARY: 293 errors from 3 contexts (suppressed: 0 from 0)

Overall Grade: F
