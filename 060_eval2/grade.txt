Grading at 10/23/2022:05:57:09.047294
For commit ID 5a1ffeadedac4c096dd1c387e4d27bdd53214a9c
Grading at Sun Oct 23 01:57:08 AM EDT 2022
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1  story-step1.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
  - Valgrind reported errors
Valgrind reported errors or memory leaks:
==158173== Memcheck, a memory error detector
==158173== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==158173== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==158173== Command: ./story-step1 story.txt
==158173== Parent PID: 158171
==158173== 
==158173== Conditional jump or move depends on uninitialised value(s)
==158173==    at 0x484DC80: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==158173==    by 0x1094E0: main (story-step1.c:44)
==158173== 
==158173== Invalid free() / delete / delete[] / realloc()
==158173==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==158173==    by 0x109564: main (story-step1.c:53)
==158173==  Address 0x4a90c80 is 0 bytes inside a block of size 472 free'd
==158173==    at 0x484B27F: free (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==158173==    by 0x109664: main (story-step1.c:70)
==158173==  Block was alloc'd at
==158173==    at 0x484DCD3: realloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==158173==    by 0x10962B: main (story-step1.c:67)
==158173== 
==158173== Invalid write of size 1
==158173==    at 0x109582: main (story-step1.c:54)
==158173==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==158173== 
==158173== 
==158173== Process terminating with default action of signal 11 (SIGSEGV)
==158173==  Access not within mapped region at address 0x0
==158173==    at 0x109582: main (story-step1.c:54)
==158173==  If you believe this happened as a result of a stack
==158173==  overflow in your program's main thread (unlikely but
==158173==  possible), you can try to increase the size of the
==158173==  main thread stack using the --main-stacksize= flag.
==158173==  The main thread stack size used in this run was 8388608.
==158173== 
==158173== HEAP SUMMARY:
==158173==     in use at exit: 8,920 bytes in 6 blocks
==158173==   total heap usage: 68 allocs, 62 frees, 11,232 bytes allocated
==158173== 
==158173== LEAK SUMMARY:
==158173==    definitely lost: 0 bytes in 0 blocks
==158173==    indirectly lost: 0 bytes in 0 blocks
==158173==      possibly lost: 0 bytes in 0 blocks
==158173==    still reachable: 8,920 bytes in 6 blocks
==158173==         suppressed: 0 bytes in 0 blocks
==158173== Reachable blocks (those to which a pointer was found) are not shown.
==158173== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==158173== 
==158173== Use --track-origins=yes to see where uninitialised values come from
==158173== For lists of detected and suppressed errors, rerun with: -s
==158173== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1  story-step1.o rand_story.o
The code did not compile!

Overall Grade: NO GRADE YET
